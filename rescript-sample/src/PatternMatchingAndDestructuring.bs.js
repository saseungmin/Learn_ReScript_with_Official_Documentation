// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("rescript/lib/js/list.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

console.log(10);

function displayMessage(m) {
  console.log(m._0);
  
}

displayMessage(/* Success */{
      _0: "You did it!"
    });

var myArray = [
  1,
  2,
  3
];

if (myArray.length !== 3) {
  throw {
        RE_EXN_ID: "Match_failure",
        _1: [
          "PatternMatchingAndDestructuring.res",
          41,
          4
        ],
        Error: new Error()
      };
}

var item1 = myArray[0];

var item2 = myArray[1];

var data = {
  TAG: /* GoodResult */1,
  _0: "Product shipped!"
};

if (typeof data === "number") {
  console.log("Bah.");
} else if (data.TAG === /* BadResult */0) {
  console.log("Something's wrong. The error code is: " + "Product shipped!".toString());
} else {
  console.log("Success! Product shipped!");
}

var person1 = {
  TAG: /* Teacher */0,
  name: "Jane",
  age: 35
};

if (person1.TAG === /* Teacher */0) {
  console.log("Hi teacher");
} else {
  console.log("Hey student");
}

var person2 = {
  TAG: /* Teacher */0,
  name: "Jane",
  age: 35
};

if (person2.TAG !== /* Teacher */0) {
  if (person2.reportCard.gpa < 0.5) {
    console.log("What's happening");
  } else {
    console.log("Heyo");
  }
}

if (person2.TAG !== /* Teacher */0) {
  if (person2.reportCard.gpa < 0.5) {
    console.log("What's happening");
  } else {
    console.log("Heyo");
  }
}

var myItems = {
  hd: 1,
  tl: {
    hd: 2,
    tl: {
      hd: 3,
      tl: {
        hd: 4,
        tl: {
          hd: 5,
          tl: /* [] */0
        }
      }
    }
  }
};

var exit = 0;

var item;

try {
  item = List.find((function (i) {
          return i === 5;
        }), myItems);
  exit = 1;
}
catch (raw_exn){
  var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
  if (exn.RE_EXN_ID === "Not_found") {
    console.log("No such item found!");
  } else {
    throw exn;
  }
}

if (exit === 1) {
  console.log(item);
}

var students = [
  "Jane",
  "Harvey",
  "Patrick"
];

var len = students.length;

if (len !== 1) {
  if (len !== 0) {
    console.log("The students are: ", students);
  } else {
    console.log("There are no students");
  }
} else {
  var student1 = students[0];
  console.log("There's a single student here: " + student1);
}

function printStudents(_students) {
  while(true) {
    var students = _students;
    if (!students) {
      return ;
    }
    var otherStudents = students.tl;
    var student = students.hd;
    if (otherStudents) {
      console.log(student);
      _students = otherStudents;
      continue ;
    }
    console.log("Last student: " + student);
    return ;
  };
}

var result = printStudents({
      hd: "Jane",
      tl: {
        hd: "Harvey",
        tl: {
          hd: "Patrick",
          tl: /* [] */0
        }
      }
    });

var message;

if (person1.TAG === /* Teacher */0) {
  throw {
        RE_EXN_ID: "Match_failure",
        _1: [
          "PatternMatchingAndDestructuring.res",
          158,
          14
        ],
        Error: new Error()
      };
}

var name = "Jane";

var match = person1.reportCard;

message = match.passing ? "Congrats " + name + ", nice GPA of " + match.gpa.toString() + " you got there!" : "Good luck next semester " + name + "!";

var myNullableValue = 5;

if (myNullableValue !== undefined) {
  console.log("value is present");
} else {
  console.log("value is absent");
}

function optionBoolToBool(opt) {
  if (opt !== undefined) {
    return opt;
  } else {
    return false;
  }
}

var coordinates = [
  10,
  20,
  30
];

var x = 10;

var student1$1 = {
  name: "John",
  age: 10
};

var name$1 = "John";

var myResult = /* Success */{
  _0: "You did it!"
};

var n = "John";

var myList = {
  hd: 1,
  tl: {
    hd: 2,
    tl: {
      hd: 3,
      tl: /* [] */0
    }
  }
};

var theItem = 5;

exports.coordinates = coordinates;
exports.x = x;
exports.student1 = student1$1;
exports.name = name$1;
exports.myResult = myResult;
exports.displayMessage = displayMessage;
exports.n = n;
exports.myArray = myArray;
exports.item1 = item1;
exports.item2 = item2;
exports.myList = myList;
exports.data = data;
exports.person1 = person1;
exports.person2 = person2;
exports.theItem = theItem;
exports.myItems = myItems;
exports.students = students;
exports.printStudents = printStudents;
exports.result = result;
exports.message = message;
exports.myNullableValue = myNullableValue;
exports.optionBoolToBool = optionBoolToBool;
/*  Not a pure module */
